{"version":3,"file":"static/js/100.6f2113f6.chunk.js","mappings":"+MAIO,SAASA,IACd,IAAMC,GAAeC,EAAAA,EAAAA,IAAiB,qBAAGC,OAAoBF,gBAGvDG,GAAcC,EAAAA,EAAAA,UAAQ,kBAAMJ,EAAaK,KAAI,SAACC,GAAD,OAC7C,gBAAiBC,UAAU,0DAA3B,WACE,eAAIA,UAAU,YAAd,UACE,cAAGC,KAAMF,EAAIG,QAASC,OAAO,SAASH,UAAU,+BAAhD,SAAgFD,EAAIK,UAEtF,eAAIJ,UAAU,YAAd,SAA2BD,EAAIM,eAC/B,eAAIL,UAAU,YAAd,SAA2BD,EAAIO,YAC/B,eAAIN,UAAU,YAAd,SAA2BD,EAAIQ,qBANxBR,EAAIS,SASjB,CAACf,IAIH,OACE,0BACE,gBAAKO,UAAU,2BAAf,UACE,mBAAOA,UAAU,4DAAjB,WACE,kBAAOA,UAAU,iFAAjB,UACE,2BACE,eAAIS,MAAM,MAAMT,UAAU,YAA1B,mBAGA,eAAIS,MAAM,MAAMT,UAAU,YAA1B,0BAGA,eAAIS,MAAM,MAAMT,UAAU,YAA1B,uBAGA,eAAIS,MAAM,MAAMT,UAAU,YAA1B,yBAKJ,2BAAQJ,W,cCtCX,SAASc,IACd,IAAMC,GAAmBjB,EAAAA,EAAAA,IAAiB,qBAAGC,OAAoBgB,oBAC3DC,GAASlB,EAAAA,EAAAA,IAAiB,qBAAGC,OAAoBiB,UACjDC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,iBAAKd,UAAU,6BAAf,WACE,cAAGA,UAAU,YAAb,SAA0BW,GAAoBC,KAC9C,mBAAQG,QANS,kBAAMF,EAAS,MAMDb,UAAU,uEAAzC,2D,cCREgB,EAAgCC,EAAAA,EAAAA,gBAAfC,EAAeD,EAAAA,EAAAA,WAEzB,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,KACXT,GAASlB,EAAAA,EAAAA,IAAiB,qBAAGC,OAAoBiB,UACjDU,GAAY5B,EAAAA,EAAAA,IAAiB,qBAAGC,OAAoB2B,aAY1D,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAEvB,OADAL,EAASJ,EAAgBJ,EAAQY,EAAWE,SACrC,WACLN,EAASF,KACTM,EAAWG,WAEZ,KAID,iBAAK3B,UAAU,0BAAf,WACE,SAACU,EAAD,KACA,SAAClB,EAAD,KACA,SAAC,IAAD,CAAeoC,KAAMN","sources":["views/Repositories/RepositoriesTable/RepositoriesTable.tsx","views/Repositories/RepositoriesHeader/RepositoriesHeader.tsx","views/Repositories/RepositoriesPage/RepositoriesPage.tsx"],"sourcesContent":["import { useTypedSelector } from '@hooks';\nimport React from 'react';\nimport { useMemo } from 'react';\n\nexport function RepositoriesTable() {\n  const repositories = useTypedSelector(({ github }) => github.repositories);\n\n  // prettier-ignore\n  const tableParser = useMemo(() => repositories.map((rep) => (\n        <tr key={rep.id} className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\n          <td className=\"py-4 px-6\">\n            <a href={rep.svn_url} target=\"_blank\" className='no-underline hover:underline'>{rep.name}</a>\n          </td>\n          <td className=\"py-4 px-6\">{rep.description}</td>\n          <td className=\"py-4 px-6\">{rep.language}</td>\n          <td className=\"py-4 px-6\">{rep.stargazers_count}</td>\n        </tr>\n      )),\n    [repositories]\n  );\n\n  // RENDER\n  return (\n    <div>\n      <div className=\"overflow-x-auto relative\">\n        <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n          <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n            <tr>\n              <th scope=\"col\" className=\"py-3 px-6\">\n                Name\n              </th>\n              <th scope=\"col\" className=\"py-3 px-6\">\n                Description\n              </th>\n              <th scope=\"col\" className=\"py-3 px-6\">\n                Language\n              </th>\n              <th scope=\"col\" className=\"py-3 px-6\">\n                Stars\n              </th>\n            </tr>\n          </thead>\n          <tbody>{tableParser}</tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useTypedSelector } from '@hooks';\nimport { useNavigate } from 'react-router-dom';\n\nexport function RepositoriesHeader() {\n  const organizationName = useTypedSelector(({ github }) => github.organizationName);\n  const search = useTypedSelector(({ github }) => github.search);\n  const navigate = useNavigate();\n  const handleGoHome = () => navigate('/');\n\n  // RENDER\n  return (\n    <div className=\"mb-10 flex justify-between\">\n      <p className=\"text-5xl \">{organizationName || search}</p>\n      <button onClick={handleGoHome} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n        Главная\n      </button>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { WindowSpinner } from '@components';\nimport { useTypedDispatch, useTypedSelector } from '@hooks';\nimport { RepositoriesTable } from '../RepositoriesTable/RepositoriesTable';\nimport { RepositoriesHeader } from '../RepositoriesHeader/RepositoriesHeader';\nimport { githubActions } from '@store';\nconst { getRepositories, resetState } = githubActions;\n\nexport default function RepositoriesPage() {\n  const dispatch = useTypedDispatch();\n  const search = useTypedSelector(({ github }) => github.search);\n  const isLoading = useTypedSelector(({ github }) => github.isLoading);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    dispatch(getRepositories(search, controller.signal));\n    return () => {\n      dispatch(resetState());\n      controller.abort();\n    };\n  }, []);\n\n  // RENDER\n  return (\n    <div className=\"container mx-auto py-20\">\n      <RepositoriesHeader />\n      <RepositoriesTable />\n      <WindowSpinner open={isLoading} />\n    </div>\n  );\n}\n"],"names":["RepositoriesTable","repositories","useTypedSelector","github","tableParser","useMemo","map","rep","className","href","svn_url","target","name","description","language","stargazers_count","id","scope","RepositoriesHeader","organizationName","search","navigate","useNavigate","onClick","getRepositories","githubActions","resetState","RepositoriesPage","dispatch","useTypedDispatch","isLoading","useEffect","controller","AbortController","signal","abort","open"],"sourceRoot":""}